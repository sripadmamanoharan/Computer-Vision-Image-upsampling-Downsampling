# -*- coding: utf-8 -*-
"""Q1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CkdOWgFJwpsOY_-V5My2-F34XLiPvGri
"""

import numpy as np

import matplotlib.pyplot as plt

from PIL import Image

# Function to normalize the grayscale image
def normalize_image(image):
    return image / 255.0

# Function to downsample the image by a factor of 2
def downsample_image(image):
    return image[::2, ::2]

# Function to upsample the image by inserting empty pixels
def upsample_image(image):
    upsampled = np.zeros((image.shape[0] * 2, image.shape[1] * 2), dtype=image.dtype)
    upsampled[::2, ::2] = image
    return upsampled

from google.colab import files
uploaded = files.upload()

from PIL import Image
import numpy as np

# Replace with the filename you uploaded
image_path = 'Test Image.png'
image = Image.open(image_path).convert('L')  # Convert image to grayscale
image = np.array(image)

# Normalize the image
normalized_image = normalize_image(image)

# Downsample twice
downsample_1 = downsample_image(normalized_image)
downsample_2 = downsample_image(downsample_1)

# Upsample twice
upsample_1 = upsample_image(downsample_2)
upsample_2 = upsample_image(upsample_1)

# Plot the original and processed images for comparison
plt.figure(figsize=(10, 8))
# Original normalized image
plt.subplot(2, 3, 1)
plt.imshow(normalized_image, cmap='gray')
plt.title('Original Image')

# First downsampled image
plt.figure(figsize=(10, 8))
plt.subplot(2, 3, 2)
plt.imshow(downsample_1, cmap='gray')
plt.title('Downsample-1')

# Second downsampled image
plt.figure(figsize=(10, 8))
plt.subplot(2, 3, 3)
plt.imshow(downsample_2, cmap='gray')
plt.title('Downsample-2')

# First upsampled image
plt.figure(figsize=(10, 8))
plt.subplot(2, 3, 5)
plt.imshow(upsample_1, cmap='gray')
plt.title('Upsample-1')

# Second upsampled image
plt.figure(figsize=(10, 8))
plt.subplot(2, 3, 5)
plt.imshow(upsample_2, cmap='gray')
plt.title('Upsample-2')